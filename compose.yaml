services:
  zoo:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo
    volumes:
      - kafka_data:/var/lib/kafka/data
      
  postgresql1:
    image: postgres:16
    ports:
      - "5431:5432"
    healthcheck:
      test: [ "CMD", "pg_isready","-d","postgres","-U","postgres" ]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 5s
    container_name: postgresql1
    environment:
      POSTGRES_DB: transactions
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgresql1:/var/lib/postgresql/data

  postgresql2:
    image: postgres:16
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: main
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    container_name: postgresql2
    healthcheck:
      test: [ "CMD", "pg_isready","-d","postgres","-U","postgres" ]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 5s
    volumes:
      - postgresql2:/var/lib/postgresql/data
  postgresql3:
    image: postgres:16
    ports:
      - "5434:5432"

    healthcheck:
      test: [ "CMD", "pg_isready","-d","postgres","-U","postgres" ]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 5s
    container_name: postgresql3
    environment:
      POSTGRES_DB: hrs
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgresql3:/var/lib/postgresql/data


  hrs-service:
    build:
      context: ./Hrs
      dockerfile: hrs.dockerfile
    container_name: hrs-service
    ports:
      - "8082:8082"
    depends_on:
      - postgresql3
      - kafka
      - zoo
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql3:5432/hrs
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      APP_SERVER: kafka:9092

  brt-service:
    build:
      context: ./Brt-service
      dockerfile: brt.dockerfile
    container_name: brt-service
    ports:
      - "8081:8081"
    depends_on:
      - postgresql2
      - kafka
      - zoo
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql2:5432/main
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      APP_SERVER: kafka:9092

  crm-service:
    build:
      context: ./Crm
      dockerfile: crm.dockerfile
    container_name: crm-service
    ports:
      - "8083:8083"
    depends_on:
      - postgresql2
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql2:5432/main
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres


  cdr-service:
    build:
      context: ./Cdr-service
      dockerfile: cdr.dockerfile
    container_name: cdr-service
    ports:
      - "8080:8080"
    depends_on:
      - postgresql1
      - kafka
      - zoo
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql1:5432/transactions
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      APP_SERVER: kafka:9092

volumes:
  postgresql1: {}
  postgresql2: {}
  postgresql3: {}
  kafka_data: {}
